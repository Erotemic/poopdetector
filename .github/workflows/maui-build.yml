name: Build (single-APK) + Windows and Release

on:
  push:
    branches: [ main, build-test ]   # add/remove branches as you like
    tags:     [ 'v*' ]               # push v1.0.0, v1.1.0 … to create a release
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write                    # needed for release upload

env:
  PROJECT_PATH: PoopDetector/PoopDetector.csproj
  ANDROID_OUT: ${{ github.workspace }}/artifacts/android
  WINDOWS_OUT: ${{ github.workspace }}/artifacts/windows

jobs:
# ------------------------------------------------ Android
  android:
    runs-on: windows-latest
    outputs:
      apk: ${{ steps.pick.outputs.apk }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: 9.0.x }

      - name: Install MAUI workload
        run: |
          dotnet workload install maui --skip-sign-check
          dotnet workload restore

      - run: dotnet restore $PROJECT_PATH

      - name: Publish APK (AOT off)
        shell: bash
        run: |
          dotnet publish "$PROJECT_PATH" \
            -c Release \
            -f net9.0-android \
            -p:AndroidPackageFormat=apk \
            -p:RunAOTCompilation=false \
            -o "$ANDROID_OUT"

      # keep just one APK
      - id: pick
        shell: bash
        run: |
          APK=$(ls "$ANDROID_OUT"/*Signed.apk 2>/dev/null || ls "$ANDROID_OUT"/*.apk | head -n 1)
          echo "apk=$APK" >>"$GITHUB_OUTPUT"
          find "$ANDROID_OUT" -name '*.apk' ! -path "$APK" -delete

      - uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: ${{ steps.pick.outputs.apk }}

# ------------------------------------------------ Windows
  windows:
    runs-on: windows-latest
    outputs:
      zip: ${{ steps.zip.outputs.zip }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: 9.0.x }

      - name: Install MAUI workload
        run: |
          dotnet workload install maui --skip-sign-check
          dotnet workload restore
      - run: dotnet restore $PROJECT_PATH

      - name: Publish unpackaged Windows build
        shell: bash
        run: |
          dotnet publish "$PROJECT_PATH" \
            -c Release \
            -f net9.0-windows10.0.19041.0 \
            -p:WindowsPackageType=None \
            -p:RuntimeIdentifierOverride=win10-x64 \
            -p:WindowsAppSDKSelfContained=true \
            -o "$WINDOWS_OUT"

      # ✅ zip via native PowerShell
      - name: Zip output
        id: zip
        shell: pwsh
        run: |
          $zip = Join-Path (Split-Path $env:WINDOWS_OUT) 'PoopDetector-win64.zip'
          Compress-Archive -Path "$env:WINDOWS_OUT\*" -DestinationPath $zip -Force
          echo "zip=$zip" >> $env:GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: windows-zip
          path: ${{ steps.zip.outputs.zip }}

# ------------------------------------------------ Release
  release:
    needs: [ android, windows ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with: { name: android-apk, path: . }

      - uses: actions/download-artifact@v4
        with: { name: windows-zip, path: . }

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.apk
            *.zip
          generate_release_notes: true
