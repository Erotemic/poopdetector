name: Build (cached) APK + Windows & Release
on:
  push:
    branches: [ main, build-test ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions: { contents: write }

env:
  PROJECT_PATH: PoopDetector/PoopDetector.csproj
  OUT_ANDROID: ${{ github.workspace }}/artifacts/android
  OUT_WINDOWS: ${{ github.workspace }}/artifacts/windows
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

jobs:
  build:
    runs-on: windows-latest

    steps:
    # ───── git & SDK ───────────────────────────────────────────────
    - uses: actions/checkout@v4
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        cache: true                     # caches NuGet automatically :contentReference[oaicite:5]{index=5}

    # ───── restore workload cache ─────────────────────────────────
    - name: Restore MAUI workload cache
      uses: actions/cache@v4
      with:
        key: maui-${{ runner.os }}-${{ hashFiles('.github/workflows/global.json') }}-sdk9
        path: |
          C:\Program Files\dotnet\packs
          C:\Program Files\dotnet\workloadmanifests
          ~/.nuget/packages          # tilde works in PowerShell

    # ───── install only what’s missing ────────────────────────────
    - name: Install MAUI workload (skips if cached)
      run: |
        dotnet workload install maui --skip-sign-check
        dotnet workload restore

    # ───── Android build (APK) ────────────────────────────────────
    - name: Publish APK (AOT off)
      shell: bash
      run: |
        dotnet publish "$PROJECT_PATH" \
          -c Release -f net9.0-android \
          -p:AndroidPackageFormat=apk \
          -p:RunAOTCompilation=false \
          -o "$OUT_ANDROID"
        cp $(ls "$OUT_ANDROID"/*Signed.apk 2>/dev/null || ls "$OUT_ANDROID"/*.apk | head -n1) "$OUT_ANDROID/app.apk"

    # ───── Windows build ──────────────────────────────────────────
    - name: Publish unpackaged Windows build
      shell: bash
      run: |
        dotnet publish "$PROJECT_PATH" \
          -c Release -f net9.0-windows10.0.19041.0 \
          -p:WindowsPackageType=None \
          -p:RuntimeIdentifierOverride=win10-x64 \
          -p:WindowsAppSDKSelfContained=true \
          -o "$OUT_WINDOWS"
    - name: Zip Windows folder
      shell: pwsh
      run: |
        Compress-Archive -Path "$env:OUT_WINDOWS\*" -DestinationPath "$env:OUT_WINDOWS\PoopDetector-win64.zip" -Force

    # ───── Save artifacts ─────────────────────────────────────────
    - uses: actions/upload-artifact@v4
      with: { name: android-apk, path: ${{ env.OUT_ANDROID }}/app.apk }
    - uses: actions/upload-artifact@v4
      with: { name: windows-zip, path: ${{ env.OUT_WINDOWS }}/PoopDetector-win64.zip }

    # ───── release on tag ─────────────────────────────────────────
    - name: Release (only on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ env.OUT_ANDROID }}/app.apk
          ${{ env.OUT_WINDOWS }}/PoopDetector-win64.zip
        generate_release_notes: true
